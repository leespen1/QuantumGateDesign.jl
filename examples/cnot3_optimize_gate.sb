#!/bin/bash
#SBATCH --job-name=cnot3_convergence_correctness        # Job name
#SBATCH --mail-type=NONE             # Mail events (NONE, BEGIN, END, FAIL, ALL)
#SBATCH --mail-user=leespen1@msu.edu # Where to send mail. 
#SBATCH --nodes=6                    # Maximum number of nodes to be allocated
#SBATCH --ntasks-per-node=2          # Maximum number of tasks on each node
#SBATCH --cpus-per-task=8           # Number of processors for each task (want several because the BLAS is multithreaded, even though my Julia code is not)
#SBATCH --mem-per-cpu=1Gb            # Memory (i.e. RAM) per processor
#SBATCH --export=ALL                 # Export environment variable (not sure if this is necessary, but I don't think it hurts)
#SBATCH --time=96:00:00              # Wall time limit (days-hrs:min:sec)
#SBATCH --output=cnot3_convergence_correctness_%j.log     # Path to the standard output and error files relative to the working directory



echo "Date              = $(date)"
echo "Hostname          = $(hostname -s)"
echo "Working Directory = $(pwd)"
echo ""
echo "Number of Nodes Allocated      = $SLURM_JOB_NUM_NODES"
echo "Number of Tasks Per Node       = $SLURM_NTASKS_PER_NODE"
echo "Number of CPUs Per Task       = $SLURM_CPUS_PER_TASK"
echo ""

# I am hoping that this allows me to distribute each julia run between nodes and tasks.
# Above I established the pool to draw from, and below I execute things that take a limited
# amount of resources from that pool

srun --nodes=1 --ntasks=1 julia cnot3_optimize_gate.jl 2 1e-2 -j -m 10000 &
srun --nodes=1 --ntasks=1 julia cnot3_optimize_gate.jl 2 1e-4 -j -m 10000 &
srun --nodes=1 --ntasks=1 julia cnot3_optimize_gate.jl 2 1e-2 -m 10000 &
srun --nodes=1 --ntasks=1 julia cnot3_optimize_gate.jl 2 1e-4 -m 10000 &
srun --nodes=1 --ntasks=1 julia cnot3_optimize_gate.jl 4 1.8e-2 -m 10000 &
srun --nodes=1 --ntasks=1 julia cnot3_optimize_gate.jl 4 1.8e-3 -m 10000 &
srun --nodes=1 --ntasks=1 julia cnot3_optimize_gate.jl 6 5.6e-1 -m 10000 &
srun --nodes=1 --ntasks=1 julia cnot3_optimize_gate.jl 6 1e-1 -m 10000 &
srun --nodes=1 --ntasks=1 julia cnot3_optimize_gate.jl 8 1e0 -m 10000 &
srun --nodes=1 --ntasks=1 julia cnot3_optimize_gate.jl 8 3.2e-1 -m 10000 &
srun --nodes=1 --ntasks=1 julia cnot3_optimize_gate.jl 10 1.3e0 -m 10000 &
srun --nodes=1 --ntasks=1 julia cnot3_optimize_gate.jl 10 5.6e-1 -m 10000 &

wait # Wait for all tasks to finish before completing the job
