#!/bin/bash
#SBATCH --job-name=cnot3_optimization # Job name
#SBATCH --mail-type=NONE             # Mail events (NONE, BEGIN, END, FAIL, ALL)
#SBATCH --mail-user=leespen1@msu.edu # Where to send mail. 
#SBATCH --nodes=1                   # Maximum number of nodes to be allocated
#SBATCH --ntasks-per-node=1          # Maximum number of tasks on each node
#SBATCH --cpus-per-task=1           # Number of processors for each task (want several because the BLAS is multithreaded, even though my Julia code is not)
#SBATCH --mem=16G                    # Memory (i.e. RAM) per NODE
#SBATCH --export=NONE                # HPCC suggests setting to NONE for HPCC reasons, but I don't think it's necessary, and I want ALL so that I can load julia and have it transfer to all nodes
#SBATCH --constraint=intel16
#SBATCH --time=1-00:00:00              # Wall time limit (days-hrs:min:sec)
#SBATCH --output=log_cnot3_optimization_%A_%a.log     # Path to the standard output and error files relative to the working directory
#SBATCH --array=0-11


echo "Date              = $(date)"
echo "Hostname          = $(hostname -s)"
echo "Working Directory = $(pwd)"
echo ""
echo "Number of Nodes Allocated      = $SLURM_JOB_NUM_NODES"
echo "Number of Tasks Per Node       = $SLURM_NTASKS_PER_NODE"
echo "Number of CPUs Per Task       = $SLURM_CPUS_PER_TASK"
echo ""



COMMANDS = (
"2 1e-2 -j -m 1000"
"2 1e-4 -j -m 1000"
"2 1e-2    -m 1000"
"2 1e-4    -m 1000"
"4 1.8e-2  -m 1000"
"4 1.8e-3  -m 1000"
"6 5.6e-1  -m 1000"
"6 1e-1    -m 1000"
"8 1e0     -m 1000"
"8 3.2e-1  -m 1000"
"10 1.3e0  -m 1000"
"10 5.6e-1 -m 1000"
)

CMD="${COMMANDS[$SLURM_ARRAY_TASK_ID]}"

module purge
module load Julia
project_env=/mnt/home/leespen1/.julia/dev/QuantumGateDesign

julia --project=/mnt/home/leespen1/.julia/dev/QuantumGateDesign cnot3_optimize_gate.jl $CMD

### OLD WORK; SWITCHING TO JOB ARRAYS

# I am hoping that this allows me to distribute each julia run between nodes and tasks.
# Above I established the pool to draw from, and below I execute things that take a limited
# amount of resources from that pool

# Maybe I should use Julia "project" option

#srun --nodes=1 --ntasks=1 --cpus-per-task=1 --mem=16G --time=96:00:00 --constraint=intel16 module purge; module load Julia; julia --project=/mnt/home/leespen1/.julia/dev/QuantumGateDesign cnot3_optimize_gate.jl 2 1e-2 -j -m 1000 &
#srun --nodes=1 --ntasks=1 --cpus-per-task=1 --mem=16G --time=96:00:00 --constraint=intel16 module purge; module load Julia; julia --project=/mnt/home/leespen1/.julia/dev/QuantumGateDesign cnot3_optimize_gate.jl 2 1e-4 -j -m 1000 &
#srun --nodes=1 --ntasks=1 --cpus-per-task=1 --mem=16G --time=96:00:00 --constraint=intel16 module purge; module load Julia; julia --project=/mnt/home/leespen1/.julia/dev/QuantumGateDesign cnot3_optimize_gate.jl 2 1e-2    -m 1000 &
#srun --nodes=1 --ntasks=1 --cpus-per-task=1 --mem=16G --time=96:00:00 --constraint=intel16 module purge; module load Julia; julia --project=/mnt/home/leespen1/.julia/dev/QuantumGateDesign cnot3_optimize_gate.jl 2 1e-4    -m 1000 &
#srun --nodes=1 --ntasks=1 --cpus-per-task=1 --mem=16G --time=96:00:00 --constraint=intel16 module purge; module load Julia; julia --project=/mnt/home/leespen1/.julia/dev/QuantumGateDesign cnot3_optimize_gate.jl 4 1.8e-2  -m 1000 &
#srun --nodes=1 --ntasks=1 --cpus-per-task=1 --mem=16G --time=96:00:00 --constraint=intel16 module purge; module load Julia; julia --project=/mnt/home/leespen1/.julia/dev/QuantumGateDesign cnot3_optimize_gate.jl 4 1.8e-3  -m 1000 &
#srun --nodes=1 --ntasks=1 --cpus-per-task=1 --mem=16G --time=96:00:00 --constraint=intel16 module purge; module load Julia; julia --project=/mnt/home/leespen1/.julia/dev/QuantumGateDesign cnot3_optimize_gate.jl 6 5.6e-1  -m 1000 &
#srun --nodes=1 --ntasks=1 --cpus-per-task=1 --mem=16G --time=96:00:00 --constraint=intel16 module purge; module load Julia; julia --project=/mnt/home/leespen1/.julia/dev/QuantumGateDesign cnot3_optimize_gate.jl 6 1e-1    -m 1000 &
#srun --nodes=1 --ntasks=1 --cpus-per-task=1 --mem=16G --time=96:00:00 --constraint=intel16 module purge; module load Julia; julia --project=/mnt/home/leespen1/.julia/dev/QuantumGateDesign cnot3_optimize_gate.jl 8 1e0     -m 1000 &
#srun --nodes=1 --ntasks=1 --cpus-per-task=1 --mem=16G --time=96:00:00 --constraint=intel16 module purge; module load Julia; julia --project=/mnt/home/leespen1/.julia/dev/QuantumGateDesign cnot3_optimize_gate.jl 8 3.2e-1  -m 1000 &
#srun --nodes=1 --ntasks=1 --cpus-per-task=1 --mem=16G --time=96:00:00 --constraint=intel16 module purge; module load Julia; julia --project=/mnt/home/leespen1/.julia/dev/QuantumGateDesign cnot3_optimize_gate.jl 10 1.3e0  -m 1000 &
#srun --nodes=1 --ntasks=1 --cpus-per-task=1 --mem=16G --time=96:00:00 --constraint=intel16 module purge; module load Julia; julia --project=/mnt/home/leespen1/.julia/dev/QuantumGateDesign cnot3_optimize_gate.jl 10 5.6e-1 -m 1000 &
#
#wait # Wait for all tasks to finish before completing the job
